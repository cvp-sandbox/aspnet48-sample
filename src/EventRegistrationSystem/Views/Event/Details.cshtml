@model EventRegistrationSystem.Models.Event

@{
    ViewBag.Title = "Event Details";
    bool isRegistered = ViewBag.IsRegistered ?? false;
    bool isCreator = ViewBag.IsCreator ?? false;
}

<h2>@Html.DisplayFor(model => model.Name)</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    <div class="col-md-8">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Event Details</h3>
            </div>
            <div class="panel-body">
                <dl class="dl-horizontal">
                    <dt>@Html.DisplayNameFor(model => model.Description)</dt>
                    <dd>@Html.DisplayFor(model => model.Description)</dd>

                    <dt>@Html.DisplayNameFor(model => model.EventDate)</dt>
                    <dd>@Html.DisplayFor(model => model.EventDate)</dd>

                    <dt>@Html.DisplayNameFor(model => model.Location)</dt>
                    <dd>@Html.DisplayFor(model => model.Location)</dd>

                    <dt>Registrations</dt>
                    <dd>
                        @Html.DisplayFor(model => model.RegistrationCount)
                        @if (Model.MaxAttendees > 0)
                        {
                            <span>/ @Html.DisplayFor(model => model.MaxAttendees)</span>
                        }
                    </dd>
                </dl>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Actions</h3>
            </div>
            <div class="panel-body">
                <div class="btn-group-vertical btn-block">
                    @if (isCreator || User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("Edit Event", "Edit", new { id = Model.EventId }, new { @class = "btn btn-primary" })
                        @Html.ActionLink("Delete Event", "Delete", new { id = Model.EventId }, new { @class = "btn btn-danger" })
                    }

                    @if (!isRegistered && Model.EventDate > DateTime.Now)
                    {
                        bool isFull = Model.MaxAttendees > 0 && Model.RegistrationCount >= Model.MaxAttendees;

                        using (Html.BeginForm("Register", "Event", new { id = Model.EventId }, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-success btn-block" @(isFull ? "disabled" : "")>
                                @(isFull ? "Event Full" : "Register for Event")
                            </button>
                        }
                    }
                    else if (isRegistered && Model.EventDate > DateTime.Now)
                    {
                        using (Html.BeginForm("CancelRegistration", "Event", new { id = Model.EventId }, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-warning btn-block">Cancel Registration</button>
                        }
                    }
                </div>

                <div class="btn-group btn-block" style="margin-top: 10px;">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-block" })
                </div>
            </div>
        </div>
    </div>
</div>